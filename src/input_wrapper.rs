use winit::keyboard::KeyCode;

pub enum Key {
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    One,
    Two,
    Three,
    Four,
    Five,
    Six,
    Seven,
    Eight,
    Nine,
    Zero,
    Minus,
    Equals,
    LSquareBrackets,
    RSquareBrackets,
    BackSlash,
    SemiColon,
    Quote,
    Comma,
    Dot,
    Slash,
    BackTick,
    Ctrl,
    Shift,
    Alt,
    Meta,
    Tab,
    CapsLock,
    Enter,
    Esc,
    Space,
    BackSpace,
    LeftArrow,
    RightArrow,
    UpArrow,
    DownArrow,
    Unsupported,
}

impl From<KeyCode> for Key {
    fn from(k: KeyCode) -> Self {
        match k {
            KeyCode::KeyA => Key::A,
            KeyCode::KeyB => Key::B,
            KeyCode::KeyC => Key::C,
            KeyCode::KeyD => Key::D,
            KeyCode::KeyE => Key::E,
            KeyCode::KeyF => Key::F,
            KeyCode::KeyG => Key::G,
            KeyCode::KeyH => Key::H,
            KeyCode::KeyI => Key::I,
            KeyCode::KeyJ => Key::J,
            KeyCode::KeyK => Key::K,
            KeyCode::KeyL => Key::L,
            KeyCode::KeyM => Key::M,
            KeyCode::KeyN => Key::N,
            KeyCode::KeyO => Key::O,
            KeyCode::KeyP => Key::P,
            KeyCode::KeyQ => Key::Q,
            KeyCode::KeyR => Key::R,
            KeyCode::KeyS => Key::S,
            KeyCode::KeyT => Key::T,
            KeyCode::KeyU => Key::U,
            KeyCode::KeyV => Key::V,
            KeyCode::KeyW => Key::W,
            KeyCode::KeyX => Key::X,
            KeyCode::KeyY => Key::Y,
            KeyCode::KeyZ => Key::Z,
            KeyCode::Digit1 => Key::One,
            KeyCode::Digit2 => Key::Two,
            KeyCode::Digit3 => Key::Three,
            KeyCode::Digit4 => Key::Four,
            KeyCode::Digit5 => Key::Five,
            KeyCode::Digit6 => Key::Six,
            KeyCode::Digit7 => Key::Seven,
            KeyCode::Digit8 => Key::Eight,
            KeyCode::Digit9 => Key::Nine,
            KeyCode::Digit0 => Key::Zero,
            KeyCode::Minus => Key::Minus,
            KeyCode::Equal => Key::Equals,
            KeyCode::BracketLeft => Key::LSquareBrackets,
            KeyCode::BracketRight => Key::RSquareBrackets,
            KeyCode::Backquote => Key::BackTick,
            KeyCode::Backslash => Key::BackSlash,
            KeyCode::Comma => Key::Comma,
            KeyCode::Period => Key::Dot,
            KeyCode::Quote => Key::Quote,
            KeyCode::Semicolon => Key::SemiColon,
            KeyCode::Slash => Key::Slash,
            KeyCode::Space => Key::Space,
            KeyCode::Backspace => Key::BackSpace,
            KeyCode::Enter => Key::Enter,
            KeyCode::Escape => Key::Esc,
            KeyCode::Tab => Key::Tab,
            KeyCode::ArrowLeft => Key::LeftArrow,
            KeyCode::ArrowRight => Key::RightArrow,
            KeyCode::ArrowDown => Key::DownArrow,
            KeyCode::ArrowUp => Key::DownArrow,
            KeyCode::AltLeft | KeyCode::AltRight => Key::Alt,
            KeyCode::ControlLeft | KeyCode::ControlRight => Key::Ctrl,
            KeyCode::ShiftLeft | KeyCode::ShiftRight => Key::Shift,
            KeyCode::CapsLock => Key::CapsLock,
            KeyCode::SuperLeft | KeyCode::SuperRight => Key::Meta,
            _ => Key::Unsupported,
        }
    }
}
